// will be inherited by all published npm modules
version '0.0.16'
group 'com.logrally'

buildscript {
    apply from: 'versions.gradle'

    repositories {
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:$node_plugin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_plugin_version"
    }
}

project.ext.parentProjectDir = "${project.projectDir}"
project.ext.parentVersion = "${version}"

ext.configurePublishing = { baseVersion ->
    apply plugin: 'com.moowork.node'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'
    apply plugin: 'java'

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}

subprojects {
    repositories {
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        mavenCentral()
        jcenter()
        maven { url = "https://kotlin.bintray.com/kotlin-js-wrappers" }
    }

    ext.npmBuildDir = "${project.buildDir}/npm"
    println "NPM build dir: ${npmBuildDir}"

    ext.simpleProjectName = project.name
    if (simpleProjectName.contains("modules/")) {
        simpleProjectName = project.name.substring("modules/".size())
    }

    ext.module_dependencies = ""
    if (project.name != "shared") {
        // must produce valid JSON in package.json
        module_dependencies = ", \"@logrally/kotlin-ring-ui-shared\": \"~$parentVersion\""
    }

    apply plugin: 'kotlin2js'
    compileKotlin2Js {
        kotlinOptions {
            outputFile = "${project.buildDir}/classes/main/kotlin-ring-ui-${simpleProjectName}.js"
            moduleKind = "amd"
            sourceMap = true
            metaInfo = true
            sourceMapEmbedSources = "always"
            main = "noCall"
        }
    }

    dependencies {
        if (project.name != "shared") {
            compileOnly project(":shared")
        }

        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
        compileOnly "org.jetbrains:kotlin-react:$kotlin_react_version-kotlin-$kotlin_version"
        compileOnly "org.jetbrains:kotlin-react-dom:$kotlin_react_dom_version-kotlin-$kotlin_version"
    }

    project.ext.configurePublishingWithNPM = { baseVersion ->
        task npmBuild(type: Copy, dependsOn: build) {
            group = 'npm'
            from 'build/classes/main'
            into npmBuildDir
        }

        task processPkg(type: Copy, dependsOn: build) {
            from parentProjectDir
            into npmBuildDir
            include 'package.json'
            expand(
                    version: "$parentVersion",
                    moduleName: "$simpleProjectName",
                    kotlin_version: "$kotlin_version",
                    react_version: "$kotlin_react_version",
                    react_dom_version: "$kotlin_react_dom_version",
                    module_dependencies: "$module_dependencies"
            )
        }

        task copyFiles(type: Copy) {
            from parentProjectDir
            into npmBuildDir
            include "README.md", "CHANGELOG.md", "LICENSE.txt"
        }

        apply plugin: 'com.moowork.node'
        npm_publish {
            args = ['--access', 'public']
            execOverrides {
                it.workingDir = npmBuildDir
            }
        }

        npm_publish.dependsOn copyFiles
        npm_publish.dependsOn npmBuild
        npm_publish.dependsOn processPkg
    }

    configurePublishingWithNPM(version)
}